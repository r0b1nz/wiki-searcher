{"version":3,"sources":["SearchBar.js","EagleView.js","Utils/wikiDao.js","App.js","index.js"],"names":["SearchBar","state","currentKeyword","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","props","updateSearchKeyword","this","react_default","a","createElement","className","type","onChange","Component","SearchViews","titles","descriptions","map","title","index","id","EagleView","_this$props","EagleView_SearchViews","constructUrl","searchKeyword","split","join","setResult","word","callbackFn","url","fetch","then","result","json","App","searchResults","newVal","updateResults","objectSpread","src_SearchBar","src_EagleView","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"2QAiCeA,6MA1BXC,MAAQ,CACJC,eAAgB,MAGpBC,aAAe,SAAAC,GAAS,IAAAC,EACID,EAAME,OAAtBC,EADYF,EACZE,KAAMC,EADMH,EACNG,MACdC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAEKJ,EAAOC,IAKZC,EAAKI,MAAMC,oBAAoBN,4EAG1B,IACGN,EAAmBa,KAAKd,MAAxBC,eACR,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOZ,MAAON,EAAgBK,KAAK,iBAAiBc,SAAUN,KAAKZ,uBArBvEmB,aCAlBC,EAAc,SAAAV,GAChB,OAAIA,EAAMW,QAAUX,EAAMY,aACfZ,EAAMW,OAAOE,IAAI,SAACC,EAAOC,GAC5B,OACIZ,EAAAC,EAAAC,cAAA,OAAKW,GAAID,GACLZ,EAAAC,EAAAC,cAAA,UAAKS,GAEJd,EAAMY,aAAaG,IAAUZ,EAAAC,EAAAC,cAAA,SAAIL,EAAMY,aAAaG,OAK9D,IAmBIE,mLAXF,IAAAC,EAC4BhB,KAAKF,MAA9BW,EADHO,EACGP,OAAQC,EADXM,EACWN,aAEhB,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAACc,EAAD,CAAaR,OAAQA,EAAQC,aAAcA,YANnCH,aCRlBW,EAAe,SAAAC,GAEjB,MAdY,+DAakBA,EAJlBC,MAAM,KAAKC,KAAK,KARb,yBAqBZ,SAASC,EAAUC,EAAMC,GAC5B,IAAMC,EAAMP,EAAaK,GACzBG,MAAMD,GACDE,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAC,GAAM,OAAIJ,EAAWI,WAGpBN,ICWAQ,6MAtCb5C,MAAQ,CACNiC,cAAe,GACfY,cAAe,MAGjBhC,oBAAsB,SAAAiC,GACpBV,EAAUU,EAAQtC,EAAKuC,eACvBvC,EAAKC,SAAS,CACZwB,cAAea,OAInBC,cAAgB,SAAAF,GACdrC,EAAKC,SAALC,OAAAsC,EAAA,EAAAtC,CAAA,GACKF,EAAKR,MADV,CAEE6C,4FAMF,OACQ9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACgC,EAAD,CAAWpC,oBAAqBC,KAAKD,uBAEvCE,EAAAC,EAAAC,cAACiC,EAAD,CAAW3B,OAAQT,KAAKd,MAAM6C,cAAc,GACxCrB,aAAcV,KAAKd,MAAM6C,cAAc,KAC3C9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,uCAA8BF,EAAAC,EAAAC,cAAA,mCA/B5BI,aCDlB8B,IAASC,OAAOrC,EAAAC,EAAAC,cAACoC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ed068f9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * Search bar for allowing user to search without having a search button\n * Responsible for updating the state of Search Keyword in the App.js \n */\nclass SearchBar extends Component {\n    state = {\n        currentKeyword: \"\"\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            // equivalent to currentKeyword: value\n            [name]: value\n        });\n\n        // TODO: Q- Why does the following statement returns previous state property?\n        // this.props.updateSearchKeyword(this.state.currentKeyword); \n        this.props.updateSearchKeyword(value);\n    }\n\n    render() {\n        const { currentKeyword } = this.state;\n        return(\n            <div className=\"SearchBar\">\n                <input type=\"text\" value={currentKeyword} name=\"currentKeyword\" onChange={this.handleChange} />\n            </div>\n            );\n    }\n}\n\nexport default SearchBar","import React, { Component } from 'react';\n\n/**\n * Return array of divs containing Search results \n * @param {*} props \n */\nconst SearchViews = props => {\n    if (props.titles || props.descriptions) {\n        return props.titles.map((title, index) => { \n            return(\n                <div id={index}>\n                    <h1>{title}</h1>\n                    {/* Description doesn't exists sometimes */}\n                    {props.descriptions[index] && <p>{props.descriptions[index]}</p>}\n                </div>\n            );\n        })\n    }\n    return \"\"\n        \n}\n\n/**\n * Component responsible for loading the results of the search query\n */\nclass EagleView extends Component {\n    render() {\n        const { titles, descriptions } = this.props;\n\n        return(\n            <div className=\"MotherOfAllSearchViews\">\n                <SearchViews titles={titles} descriptions={descriptions}/ >\n            </div>\n        );\n    }\n}\n\nexport default EagleView","/**\n * A data access utility for Wikipedia\n */\n\n // Forming Wikipedia's REST Enpoint\nconst baseUrl = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=';\nconst parameters = '&format=json&origin=*';\n\n/**\n * Converting spaces to '+'\n * eg: \"Indian Currency\" -> \"Indian+Currency\"\n * @param {string} word \n */\nconst convertSpaces = word => {\n    return word.split(' ').join('+');\n}\n\nconst constructUrl = searchKeyword => {\n    const keyword = convertSpaces(searchKeyword);\n    return baseUrl + keyword + parameters;\n}\n\n/**\n * Call's the endpoint and sets the result in the state using the callbackFunction\n * @param {string} word \n * @param {Function} callbackFn \n */\nexport function setResult(word, callbackFn){\n    const url = constructUrl(word);\n    fetch(url)\n        .then(result => result.json())\n        .then(result => callbackFn(result));\n}\n\nexport default setResult","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport EagleView from './EagleView';\nimport { setResult } from './Utils/wikiDao';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchKeyword: \"\",\n    searchResults: []\n  }\n\n  updateSearchKeyword = newVal => {\n    setResult(newVal, this.updateResults);\n    this.setState({\n      searchKeyword: newVal\n    })\n  }\n\n  updateResults = searchResults => {\n    this.setState({\n      ...this.state,\n      searchResults\n    })\n  }\n\n  render() {\n    // return - Search Bar & Search View\n    return(\n            <div className=\"App\" >\n              <div className=\"Header\">\n                <h1>Wiki - Searcher</h1>\n                <SearchBar updateSearchKeyword={this.updateSearchKeyword} />\n              </div>\n              <EagleView titles={this.state.searchResults[1]}\n                  descriptions={this.state.searchResults[2]} />\n              <div className=\"Footer\">\n                <h3>Designed and developed by <b>Robin Gautam</b></h3>\n              </div>\n            </div>\n    );\n\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}